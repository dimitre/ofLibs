name: videoInput

on:
  push:
    paths:
      - videoInput/**
      - .github/workflows/videoInput.yml

permissions:
  contents: write

env:
  CMAKE_CXX_COMPILER_LAUNCHER: ccache

jobs:
  videoInput_matrix:
    strategy:
      matrix:
        cfg:
          - { platform: vs, os: windows-latest, toolchain: vs-stable }

    runs-on: ${{ matrix.cfg.os }}
    env:
      PLATFORM: ${{ matrix.cfg.platform }}
    defaults:
      run:
        shell: bash
        # working-directory: ./${{ github.workflow }}
        #
        working-directory: videoInput
    steps:
      - uses: actions/checkout@v4

      - uses: git-for-windows/setup-git-for-windows-sdk@v1
        if: runner.os == 'Windows'
        with:
          flavor: minimal

      - name: Test Shell
        run: |
          # ps -p $$
          echo $SHELL
          # ls -alF
          ls
          # tree -h

      # - name: Emscripten Install
      #   if: matrix.cfg.platform == 'emscripten'
      #   uses: mymindstorm/setup-emsdk@v14
      #   with:
      #     version: 4.0.13
      #     actions-cache-folder: "emsdk-cache"

      # - name: Verify emsdk
      #   if: matrix.cfg.platform == 'emscripten'
      #   run: |
      #     emcc -v
      #     emsdk update
      #     emsdk install latest
      #     emsdk activate latest
      #     emcc -v

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2.18
        with:
          key: ${{ runner.os }}-${{ matrix.cfg.platform }}-ccache

      - name: Install Chalet
        # uses: jaxxstorm/action-install-gh-release@v2.1.0
        uses: jaxxstorm/action-install-gh-release@v2.1.0
        with:
          repo: chalet-org/chalet
          cache: enable
          extension: .zip
          prerelease: "false"

      - name: Chalet Test / Version
        run: |
          chalet --version

      - name: Chalet Configure
        if: matrix.cfg.platform == 'emscripten'
        shell: bash
        run: chalet configure --toolchain emscripten

      - name: Chalet Bundle
        if: matrix.cfg.platform != 'ios'
        # shell: bash
        run: |
          chalet bundle --compiler-cache --show-commands

      - name: iOS
        if: matrix.cfg.platform == 'ios'
        shell: bash
        run: |
          ./${{ github.workflow }}.sh

      - name: LS check built lib
        shell: bash
        run: |
          unzip dist/*.zip
          ls -alfR dist

      - name: Rename and Publish Release
        shell: bash
        env:
          GITHUB_TOKEN: ${{ github.TOKEN }}
        run: |
          mv dist/${{ github.workflow }}.zip oflib_${{ github.workflow }}_${{ matrix.cfg.platform }}.zip
          ls -alF *.zip
          gh release upload v0.12.1 *.zip --clobber
