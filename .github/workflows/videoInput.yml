name: videoInput

on:
  push:
    paths:
      - videoInput/**
      - .github/workflows/videoInput.yml

permissions:
  contents: write

# env:
# CMAKE_CXX_COMPILER_LAUNCHER: ccache

jobs:
  videoInput_matrix:
    strategy:
      matrix:
        include:
          - { platform: vs, os: windows-latest, toolchain: vs-stable }

          - {
              platform: msys2,
              os: ubuntu-latest,
              prefix: mingw-w64,
              toolchain: x86_64-w64-mingw32-gcc,
              shell: bash,
            }

          # - {
          #     platform: msys2,
          #     os: windows-latest,
          #     toolchain: gcc,
          #     shell: msys2 -c 'export PATH=$PATH:/c/hostedtoolcache/windows/chalet-org/chalet/latest/windows-x64',
          #     # shell: msys2 -c 'source $GITHUB_ENV; export $(cut -d= -f1 $GITHUB_ENV); {0}'
          #   }

    runs-on: ${{ matrix.os }}
    env:
      PLATFORM: ${{ matrix.platform }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workflow }}
    steps:
      - uses: actions/checkout@v4

      - name: MSYS2 Apt Cross Compile
        if: matrix.platform == 'msys2' && matrix.os == 'ubuntu-latest'
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: gcc-${{ matrix.prefix }} g++-${{ matrix.prefix }}  binutils-${{ matrix.prefix }}
          version: 1.0

      # - uses: git-for-windows/setup-git-for-windows-sdk@v1
      #   if: runner.os == 'Windows'
      #   with:
      #     flavor: minimal

      # - name: Test Shell
      #   run: |
      #     # ps -p $$
      #     echo $SHELL
      #     # ls -alF
      #     ls
      #     # tree -h

      # - name: ccache
      #   uses: hendrikmuhs/ccache-action@v1.2.18
      #   with:
      #     key: ${{ runner.os }}-${{ matrix.platform }}-ccache

      - name: Install Chalet
        uses: jaxxstorm/action-install-gh-release@v2.1.0
        with:
          repo: chalet-org/chalet
          cache: enable
          extension: .zip
          prerelease: "false"

      - name: Chalet Test / Version
        run: |
          chalet --version

      - name: Chalet Configure
        if: matrix.toolchain != ''
        run: chalet configure --toolchain ${{ matrix.toolchain }} -a auto

      - name: Chalet Bundle
        # if: matrix.platform != 'ios'
        # # chalet bundle --compiler-cache --show-commands
        run: |
          chalet bundle --show-commands

      # - name: LS BUILD
      #   run: |
      #     ls -alfR build

      - name: LS check built lib
        run: |
          unzip dist/*.zip
          ls -alfR dist

      - name: Rename and Publish Release
        env:
          GITHUB_TOKEN: ${{ github.TOKEN }}
        run: |
          mv dist/${{ github.workflow }}.zip oflib_${{ github.workflow }}_${{ matrix.platform }}.zip
          ls -alF *.zip
          gh release upload v0.12.1 *.zip --clobber
