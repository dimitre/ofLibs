name: cairo

on:
  push:
    paths:
      - cairo/**
      - .github/workflows/cairo.yml

permissions:
  contents: write

concurrency:
  # group: ${{ github.workflow }}-${{ github.ref }}
  group: ${{ github.workflow }}
  cancel-in-progress: false

# env:
# CMAKE_CXX_COMPILER_LAUNCHER: ccache
# MACOSX_DEPLOYMENT_TARGET: 11.6
# CXXFLAGS: -mmacosx-version-min=11.6

jobs:
  cairo_matrix:
    strategy:
      fail-fast: false
      matrix:
        include:
          - { platform: emscripten, os: ubuntu-latest, toolchain: emscripten }
          - { platform: linux64, os: ubuntu-latest, toolchain: llvm }
          - { platform: macos, os: macos-26, toolchain: apple-llvm }
          - { platform: vs, os: windows-latest, toolchain: vs-stable }
          - {
              platform: rpi-aarch64,
              os: ubuntu-latest,
              prefix: aarch64-linux-gnu,
              toolchain: aarch64-linux-gnu-gcc,
            }
          - {
              platform: rpi-armv6l,
              os: ubuntu-latest,
              prefix: arm-linux-gnueabihf,
              toolchain: arm-linux-gnueabihf-gcc,
            }
          - {
              platform: msys2,
              os: ubuntu-latest,
              prefix: mingw-w64,
              toolchain: x86_64-w64-mingw32-gcc,
              # params: -t gcc -a x86_64-w64-mingw32,
              # shell: bash,
            }

    runs-on: ${{ matrix.os }}
    # env:
    # PLATFORM: ${{ matrix.platform }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workflow }}

    steps:
      - uses: actions/checkout@v5

      - name: Install Meson
        run: pip install meson ninja

      # - name: ccache
      #   uses: hendrikmuhs/ccache-action@v1.2.19
      #   with:
      #     key: ${{ github.workflow }}-${{ runner.os }}-${{ matrix.platform }}-ccache

      - name: MSYS2 Apt Cross Compile
        if: matrix.platform == 'msys2' && runner.os == 'Linux'
        run: |
          sudo apt install gcc-${{ matrix.prefix }} g++-${{ matrix.prefix }} binutils-${{ matrix.prefix }}

      - name: Linux Apt Cache
        if: runner.os == 'Linux'
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libunwind-dev libpolkit-gobject-1-dev
          version: 1.0

      # - name: Linux Apt
      #   if: runner.os == 'Linux'
      #   run: |
      #     sudo apt install -y libunwind-dev libpolkit-gobject-1-dev

      # - name: Test Meson
      #   if: Runner.os == 'Windows'
      #   run: |
      #     git clone https://gitlab.freedesktop.org/cairo/cairo --depth 1
      #     cd cairo
      #     meson setup builddir --buildtype=release
      #     meson compile -C builddir

      # - name: Cairo Build
      #   run: |
      #     ./cairo.sh

      - name: Emscripten Install
        if: matrix.platform == 'emscripten'
        uses: mymindstorm/setup-emsdk@v14
        with:
          version: 4.0.15
          actions-cache-folder: "emsdk-cache"

      - name: Verify emsdk
        if: matrix.platform == 'emscripten'
        run: |
          emcc -v
          emsdk update
          emsdk install latest
          emsdk activate latest
          emcc -v

      - name: Linux Apt
        if: matrix.platform == 'linux64'
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libpixman-1-dev libpng12-dev libfreetype-dev
          version: 1.0

      - name: RPI - Apt Cache Packages
        if: matrix.platform == 'rpi-aarch64' || matrix.platform == 'rpi-armv6l'
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: multistrap gcc-${{ matrix.prefix }} g++-${{ matrix.prefix }}
          version: 1.0

      - name: RPI - multistrap
        if: matrix.platform == 'rpi-aarch64' || matrix.platform == 'rpi-armv6l'
        run: |
          mkdir -p raspbian/etc/apt/apt.conf.d/
          echo 'Acquire::AllowInsecureRepositories "true";' | sudo tee raspbian/etc/apt/apt.conf.d/90insecure
          multistrap -a arm64 -d raspbian -f ../multistrap.conf

      - name: RPI - check tree
        if: matrix.platform == 'rpi-aarch64' || matrix.platform == 'rpi-armv6l'
        run: |
          tree -d raspbian

      - name: Install Chalet
        uses: jaxxstorm/action-install-gh-release@v2.1.0
        with:
          repo: chalet-org/chalet
          cache: enable
          extension: .zip
          prerelease: "false"

      - name: Chalet Test / Version
        run: |
          chalet --version

      - name: Chalet Configure
        run: chalet configure --toolchain ${{ matrix.toolchain }}

      - name: Chalet Bundle
        run: |
          chalet bundle --show-commands

      - name: LS check built lib
        run: |
          unzip dist/*.zip
          ls -alfR dist

      - name: Remove unused files
        if: runner.os == 'macOS'
        run: |
          zip -d dist/${{ github.workflow }}.zip "lib/libcairo-*.a" "lib/pkgconfig/*" "lib/cairo/*"
          # cd dist
          # rm -rf libcairo-*.a
          # rm -rf pkgconfig
          # rm -rf cairo
          # cd ..
          # zip -r oflib_${{ github.workflow }}_${{ matrix.platform }}.zip cairo/*

      - name: Check Static Lib minos / MACOSX_DEPLOYMENT_TARGET
        if: runner.os == 'macOS'
        run: |
          otool -l **/*.a | grep minos

      - name: Rename and Publish Release
        env:
          GITHUB_TOKEN: ${{ github.TOKEN }}
        run: |
          mv dist/${{ github.workflow }}.zip oflib_${{ github.workflow }}_${{ matrix.platform }}.zip
          ls -alF *.zip
          gh release upload v0.12.1 *.zip --clobber
