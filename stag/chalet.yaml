name: oflibs
version: "1.0"
externalDependencies:
  opencv:
    repository: https://github.com/opencv/opencv
    # tag: 4.12.0
    commit: a8afdee
    kind: git
  stag:
    repository: https://github.com/manfredstoiber/stag
    # tag: 0.8.0
    # commit: 2f86d13775d119edbb69af52e5f566fd65c6953b
    kind: git
targets:
  opencv:
    kind: cmakeProject
    location: ${external:${name}}
    recheck: false
    rebuild: false
    install: true
    defines:
      - CMAKE_CXX_STANDARD=17
      - CMAKE_INSTALL_LIBDIR=lib
      - BUILD_SHARED_LIBS=OFF
      - CMAKE_BUILD_TYPE=Release
      - CMAKE_POSITION_INDEPENDENT_CODE=ON
      # - ENABLE_NEON=ON
      - BUILD_DOCS=OFF
      - BUILD_EXAMPLES=OFF
      - BUILD_TESTS=OFF
      - BUILD_PACKAGE=OFF
      - BUILD_PERF_TESTS=OFF
      - BUILD_PNG=OFF
      - BUILD_TIFF=OFF
      - BUILD_WEBP=OFF
      - BUILD_JASPER=OFF
      - BUILD_JAVA=OFF

      # test for ofxOpenCvDnnObjectDetection
      - BUILD_opencv_dnn=ON

      - BUILD_opencv_apps=OFF
      - BUILD_opencv_calib3d=ON
      - BUILD_opencv_highgui=ON
      - BUILD_opencv_imgcodecs=OFF
      # changed today because of CopperTag cv::imwrite
      # - BUILD_opencv_imgcodecs=ON
      - BUILD_opencv_java=OFF
      - BUILD_opencv_python2=OFF
      - BUILD_opencv_python3=OFF
      - BUILD_opencv_python=OFF
      - BUILD_opencv_shape=OFF
      - BUILD_opencv_stitching=OFF
      - BUILD_opencv_superres=OFF
      - BUILD_opencv_ts=OFF
      - BUILD_opencv_videoio=OFF
      # - BUILD_opencv_videoio=ON
      - BUILD_opencv_videostab=OFF
      - BUILD_opencv_world=ON
      - WITH_ADE=OFF
      # super complicated but once I've enabled BUILD_opencv_imgcodecs, I had to enable
      # WITH_JASPER=OFF and WITH_WEBP=OFF so it can avoid linker errors
      - WITH_JASPER=OFF
      - WITH_OPENJPEG=OFF
      - WITH_TIFF=OFF
      - WITH_WEBP=OFF
      - BUILD_JPEG=OFF
      - BUILD_ZLIB=OFF
      # disable orbbec libs
      - WITH_OBSENSOR=OFF
      - WITH_PROTOBUF=OFF
      # - ZLIB_ROOT=${externalBuild:zlib}
      # - ZLIB_LIBRARY=${externalBuild:zlib}
      # - ZLIB_INCLUDE_DIRS=${external:zlib}
      # - CV_DISABLE_OPTIMIZATION=ON
      - WITH_OPENCL=OFF
      # - WITH_OPENCLAMDBLAS=OFF
      # - WITH_OPENCLAMDFFT=OFF

    # "defines[platform:web]":
    defines[platform:web]:
      - BUILD_IPP_IW=OFF
      - WITH_ITT=OFF
      - WASM=ON
      - CV_ENABLE_INTRINSICS=OFF
      - BUILD_WASM_INTRIN_TESTS=OFF
      - BUILD_PERF_TESTS=OFF
      - BUILD_TESTS=OFF

    # "defines[platform:windows]":
    defines[platform:windows]:
      - CPU_BASELINE=""
      - CPU_DISPATCH=""
      - CV_DISABLE_OPTIMIZATION=ON

    # "defines[platform:macos]":
    defines[platform:macos]:
      - APPLE_FRAMEWORK=ON
      - CPU_BASELINE=NATIVE
      - CMAKE_OSX_DEPLOYMENT_TARGET=11.6
      - CMAKE_OSX_ARCHITECTURES=x86_64;arm64
  stag:
    kind: cmakeProject
    location: ${external:${name}}
    recheck: false
    rebuild: false
    install: true
    defines:
      - CMAKE_PREFIX_PATH=/Users/z/src/ofLibs/stag/${externalBuild:opencv}/install/lib/cmake/opencv4
      # - CMAKE_MODULE_PATH=${externalBuild:opencv}/install/lib/cmake/opencv4
      # - OpenCV_DIR=${externalBuild:opencv}/install/lib/cmake/opencv4
      - BUILD_SHARED_LIBS=OFF
      - CMAKE_BUILD_TYPE=Release
      - CMAKE_ARCHIVE_OUTPUT_DIRECTORY=lib
      - CMAKE_POSITION_INDEPENDENT_CODE=ON
      # - CMAKE_INCLUDE_OUTPUT_DIRECTORY=include
      - CMAKE_INSTALL_PREFIX=Release
      - CMAKE_INSTALL_LIBDIR=lib

      # - CMAKE_INSTALL_INCLUDEDIR=include
      # - CMAKE_INSTALL_FULL_LIBDIR=lib
    defines[platform:macos]:
      # - CMAKE_OSX_ARCHITECTURES=x86_64;arm64
      - CMAKE_OSX_DEPLOYMENT_TARGET=11.6

distribution:
  stag:
    kind: archive
    format: zip
    include:
      - ${external:${name}}/LICENSE**
      - ${externalBuild:${name}}/install/include
      - ${externalBuild:${name}}/install/lib
